#if ! defined ( INSLIRE_H )
#define INSLIRE_H

#include <list>
#include <string>

//--------------------------------------------------- Interfaces utilisï¿½ï¿½s
#include "Symbole.h"
#include "Ins.h"
#include "Id.h"
//------------------------------------------------------------- Constantes

//------------------------------------------------------------------ Types

//------------------------------------------------------------------------

//
//
//------------------------------------------------------------------------

 class InsLire : public Ins
{
//----------------------------------------------------------------- PUBLIC

public:
//----------------------------------------------------- Mï¿½ï¿½thodes publiques
	std::string getNomId();

	void evaluationIns(std::map<Id,Exp*> & variables);

//-------------------------------------------- Constructeurs - destructeur
	InsLire ( const InsLire & inslire );

	InsLire ( );

	InsLire (Ins * prec, Id* aId);

    virtual ~InsLire ( );

//------------------------------------------------------------------ PRIVE

protected:
//----------------------------------------------------- Mï¿½ï¿½thodes protï¿½ï¿½gï¿½ï¿½es

private:
//------------------------------------------------------- Mï¿½ï¿½thodes privï¿½ï¿½es

protected:
//----------------------------------------------------- Attributs prot¨¦g¨¦s
    Id* nomId;

private:
//------------------------------------------------------- Attributs privï¿½ï¿½s

//---------------------------------------------------------- Classes amies

//-------------------------------------------------------- Classes privï¿½ï¿½es

//----------------------------------------------------------- Types privï¿½ï¿½s

};

//----------------------------------------- Types dï¿½pendants de <${file_base}>

#endif // INSLIRE_H
